import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { MotionLazyContainer } from "@/components/animate";
import CustomI18nextProvider from "@/locales/CustomI18nextProvider";
import { SettingsProvider, ThemeSettings } from "@/components/settings";
import ThemeProvider from "@/theme/ThemeProvider";
import ThemeLocalization from "@/locales";
import SnackbarProvider from "@/components/snackbar";
import HomeLayout from "@/layouts/home";
import {
  ClerkProvider,
  SignInButton,
  SignUpButton,
  SignedIn,
  SignedOut,
  UserButton,
} from '@clerk/nextjs'
import { SocketProvider } from "@/components/socket/SocketProvider";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        <ClerkProvider>
          <SocketProvider>
            {/* <LocalizationProvider dateAdapter={AdapterDayjs}> */}
            <CustomI18nextProvider>
              <SettingsProvider>
                <MotionLazyContainer>
                  <ThemeProvider>
                    <ThemeSettings>
                      <ThemeLocalization>
                        <SnackbarProvider>
                          {/* <HomeLayout> */}
                          {children}
                          {/* </HomeLayout> */}
                        </SnackbarProvider>
                      </ThemeLocalization>
                    </ThemeSettings>
                  </ThemeProvider>
                </MotionLazyContainer>
              </SettingsProvider>
            </CustomI18nextProvider>
            {/* </LocalizationProvider> */}
          </SocketProvider>
        </ClerkProvider>

      </body>
    </html>
  );
}
